---
title: "Untitled"
format: html
editor: source
---

```{r}
library(haven)
library(tidyverse)
```

```{r}
sleep <- read_xpt("data/SLQ_J.XPT")
diet_intake <- read_xpt("data/DR1IFF_J.XPT")
diet_total <- read_xpt("data/DR1TOT_J.XPT")
demo <- read_xpt("data/DEMO_J.XPT")
```

```{r}
data <- left_join(sleep, diet_total, by = "SEQN")
data <- left_join(data, demo, by = "SEQN")
data <- data %>%
  select(SEQN, #identifier
         SLD012, SLD013, SLQ050, SLQ120, #sleep questions: weekday hrs, weeknd hr, doctor question, overly sleepy?
         WTDRD1, DR1DRSTZ, #dietary weight and dietary recall status
         DR1TKCAL, DR1TPROT, DR1TCARB, DR1TSUGR, DR1TFIBE, DR1TTFAT, #diet
         RIAGENDR, RIDAGEYR, RIDRETH1, RIDRETH3, #gender, age in yrs, ethnicity, ethnicity w/ NH Asian
         DMDBORN4, #born in US?
         DMDMARTL, INDFMPIR, #Marital status, household ref. of martial status
         DMDHHSIZ, DMDHHSZA, # of people in HH and # of children 5 years or younger in HH
         DMDHHSZB, # of children 6-17 years old in HH
         DMDHHSZE, # of adults 60 years or older in HH
         INDHHIN2, INDFMIN2, INDFMPIR #Annual household income, annual family income, and ratio of family income to poverty
  )

factorCols <- c("SLQ050", "SLQ120", 
                "DR1DRSTZ", "RIAGENDR", "RIDRETH1", "RIDRETH3", "DMDBORN4", "DMDMARTL",
                "INDHHIN2", "INDFMIN2")
data[factorCols] <- lapply(data[factorCols], factor)
data[factorCols] <- droplevels(data[factorCols])
```

```{r}
#Poisson
dataPois <- data %>%
  filter(SLQ050 != "9" & SLQ120 != "9") %>%
  mutate(SLQ120pois = as.numeric(SLQ120) - 1,
         SLQ050pois = ifelse(SLQ050 == "1", 1, 0), #equals 1 if they respond yes thye told doctor
         SLD012pois = ifelse(SLD012 < mean(SLD012, na.rm = TRUE), 1, 0),
         sumsleep = SLQ120pois + SLQ050pois + SLD012pois) #equals 1 if below avg sleep hrs

#mean-variance assumption
dataPois %>%
  summarize(meanSumSleep = mean(sumsleep, na.rm = T),
            varSumSleep = var(sumsleep, na.rm = T))

dataPois %>%
  ggplot(aes(x = sumsleep)) + geom_histogram(bins = 7, fill = "cornflowerblue", color = "black") +
  labs(y = "Frequency")

glm_pois <- glm(sumsleep ~ DR1TKCAL + DR1TPROT + DR1TCARB + DR1TFIBE + DR1TTFAT, data= dataPois, family = poisson)
summary(glm_pois)
exp(summary(glm_pois)$coef)
```

```{r}
set.seed(17)
lambda_grid <- .2 ^ (-50:50)

# Prepare X matrix (minus outcome, other sleep outcomes, seqn, weights, and status) for input to glmnet
temp <- data %>%
  select(SLD012,
         WTDRD1, #weights
         DR1TKCAL, DR1TPROT, DR1TCARB, DR1TSUGR, DR1TFIBE, DR1TTFAT, #diet
         RIAGENDR, RIDAGEYR, RIDRETH1, RIDRETH3, #gender, age in yrs, ethnicity, ethnicity w/ NH Asian
         DMDBORN4, #born in US?
         DMDHRMAZ, #household ref. of martial status
         DMDHHSIZ, DMDHHSZA, # of people in HH and # of children 5 years or younger in HH
         DMDHHSZB, # of children 6-17 years old in HH
         DMDHHSZE, # of adults 60 years or older in HH
         INDFMIN2, INDFMPIR)

temp <- temp[complete.cases(temp),]

x <- model.matrix(SLD012~DR1TKCAL+ DR1TPROT+ DR1TCARB+ DR1TSUGR+ DR1TFIBE+ DR1TTFAT, data=temp)[,-c(1)]
y <- temp$SLD012
names(x)<- names(temp)[-1]

# Elastic Net
EN.fram = glmnet(x, y, 
                 alpha=0.5, 
                 family="gaussian",
                 weights = temp$WTDRD1,
                 lambda=lambda_grid, 
                 data=temp,
                 )
vip(EN.fram, num_features=35, geom="point", include_type=TRUE)
par(mfrow=c(1,2))
plot(EN.fram)
cv.EN <- cv.glmnet(x,y, alpha=0.5, family="gaussian")
plot(cv.EN)
lambda_min <- cv.EN$lambda.min
lambda_1se <- cv.EN$lambda.1se
coef(cv.EN,s=lambda_1se)
```


```{r}
# Exploration of missing data 

# Start with total number of participants with sleep data
sleep %>% pull(SEQN) %>% length()
# N = 6161

# Filter out participants with missing data on sleep duration
temp1 = sleep %>% filter(!is.na(SLD012)) %>% filter(!is.na(SLD013))
temp1 %>% pull(SEQN) %>% length()
# N = 6090

# Filter out participants with missing data on overly-sleepiness and consulting a doctor
temp2 = temp1 %>% filter(!is.na(SLQ050)) %>% filter(SLQ050 != 9) %>% filter(SLQ050 != 7) 
temp3 = temp2 %>% filter(!is.na(SLQ120)) %>% filter(SLQ120 != 9) %>% filter(SLQ120 != 7) 
temp3 %>% pull(SEQN) %>% length()
temp4 = temp3 %>% pull(SEQN)
# N = 6076

# Filter out participants with missing data on macronutrient intake
temp5 = diet_total %>% filter(!is.na(DR1TKCAL)) %>% filter(!is.na(DR1TPROT)) %>% 
  filter(!is.na(DR1TCARB)) %>% filter(!is.na(DR1TTFAT)) %>% filter(!is.na(DR1TFIBE)) 
temp6 = temp5 %>% pull(SEQN) %>% intersect(temp4) 
temp6 %>% length()
# N = 5201

# Filter out participants with missing data on timing of deitary intake
temp7 = diet_intake %>% group_by(SEQN) %>% slice(1) %>% filter(!is.na(DR1_020)) 
temp8 = diet_intake %>% group_by(SEQN) %>% slice(n()) %>% filter(!is.na(DR1_020))
temp9 = temp6 %>% intersect(temp7 %>% pull(SEQN)) %>% intersect(temp8 %>% pull(SEQN))
temp9 %>% length()
# N = 5200

```

```{r}
#Further data missing analysis:
dropped_sleep <- anti_join(sleep, diet_total, by = "SEQN")
dropped_diet <- merge(sleep, diet_total, by = "SEQN")
dropped_diet <- dropped_diet |>
  filter((is.na(DR1TKCAL) | is.na(DR1TPROT) | is.na(DR1TCARB) | is.na(DR1TTFAT) | is.na(DR1TFIBE)))


# create var to sort according to exclusion group
grp_data <- sleep |>
  mutate(exclgrp = ifelse((SEQN %in% dropped_sleep$SEQN | SEQN %in% dropped_diet$SEQN), "NA Diet Data",
                          ifelse((is.na(SLQ050) | is.na(SLQ120) | is.na(SLD012) | is.na(SLD013)), "NA Sleep Data", 
                                 ifelse(SLQ050 == 9 | SLQ120 == 9, "Don't Knows", "Full Responses")))) |>
  select(SLQ050, SLQ120, SLD012, SLD013, exclgrp)

#convert categorical responses to characters for plotting
grp_data$SLQ050 <- as.character(grp_data$SLQ050)
grp_data$SLQ120 <- as.character(grp_data$SLQ120)

#plotting histograms of sleep hours weekdays vs. exclgrp
grp_data |>
  ggplot(aes(x = SLD012)) + facet_grid(exclgrp~., scales = "free_y") + geom_histogram(aes(fill = exclgrp)) +
  ggtitle("Sleep Distribution for Weekdays") + xlab("Hours of Sleep")

#plotting histograms of sleep hours weekends sleepy vs excl grp
grp_data |>
  ggplot(aes(x = SLD013), fill = exclgrp) + facet_grid(exclgrp~., scales = "free_y") + geom_histogram(aes(fill = exclgrp)) +
   ggtitle("Sleep Distribution for Weekends") + xlab("Hours of Sleep")

#plotting bar charts of overly sleepy
grp_data |>
  filter(exclgrp != "Don't Knows") |>
  ggplot(aes(x = (SLQ120), fill = exclgrp)) + geom_bar() + facet_grid(exclgrp~., scales = "free_y") +
  ggtitle("Responses to: How often do you feel overly sleepy?") +
  xlab("Response Category")


#plotting bar charts of i told the doc
grp_data |>
  filter(exclgrp != "Don't Knows") |>
  ggplot(aes(x = (SLQ050), fill = exclgrp)) + geom_bar() + facet_grid(exclgrp~., scales = "free_y") +
  ggtitle("Responses to: Have you ever told a doctor you've had trouble sleeping?") +
  xlab("Response Category")
```

```{r}
#histograms of sleep hours on weekdays vs weekends.SLD012 represents week days and SLD013 weekends.
sleep |> 
  select(c(SEQN, SLD012, SLD013)) |>
  pivot_longer(cols = c('SLD012', 'SLD013'),
               names_to = 'period',
               values_to = 'hours') |>
  ggplot(aes(x = hours, fill = period)) + geom_histogram(bins = 24) + facet_grid(period~.) +
  theme(legend.position = 'none')
```

```{r}
# Histogram of total daily calorie intake, stratified by gender

# Merge in gender data
merged_diet <- diet_total %>%
  left_join(select(demo, SEQN, RIAGENDR), by = "SEQN")
merged_diet <- merged_diet[!is.na(merged_diet$DR1TKCAL), ]

merged_diet %>%
  ggplot(aes(x = DR1TKCAL, fill = factor(RIAGENDR))) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 30) + 
  labs(
    x = "Energy Intake (Kcal)",
    y = "Frequency",
    title = "KCAL Intake Stratified by Sex"
  ) +
  theme_minimal() +
  scale_fill_manual(
    values = c("red", "blue"),
    labels = c("Male", "Female") 
  ) +
  labs(fill = "Gender")
```

```{r}
# Histogram of macronutrient intake, stratified by gender

# Filter out rows with missing values
filtered_diet <- merged_diet %>%
  filter(!is.na(DR1TPROT) & !is.na(DR1TCARB) & !is.na(DR1TTFAT) & !is.na(DR1TFIBE) & !is.na(RIAGENDR))

# Reshape the data to a long format
long_diet <- filtered_diet %>%
  select(DR1TPROT, DR1TCARB, DR1TTFAT, DR1TFIBE, RIAGENDR) %>%
  pivot_longer(
    cols = c(DR1TPROT, DR1TCARB, DR1TTFAT, DR1TFIBE),
    names_to = "Category",
    values_to = "Value"
  )

ggplot(long_diet, aes(x = Value, fill = factor(RIAGENDR))) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
  facet_wrap(~ Category, nrow = 2, ncol = 2, scales = "free",
             labeller = as_labeller(c(DR1TPROT = "Protein", DR1TCARB = "Carbohydrate", 
                                      DR1TTFAT = "Total Fat", DR1TFIBE = "Dietary Fiber"))) +
  labs(
    x = "Values (g)",
    y = "Frequency",
    title = "Macronutrient Intake Stratified by Sex",
    fill = "Gender"
    
  ) +
  scale_fill_manual(
    values = c("red", "blue"),
    labels = c("Male", "Female")
  ) +
  theme_minimal()
```

```{r}
# Data preparation for SLQ050 (have you ever told a doctor about sleeping problems?) analysis
dat = data %>% 
  select(DR1TKCAL,DR1TPROT,DR1TCARB,DR1TTFAT,
         DR1TFIBE,DR1TSUGR,RIAGENDR,DMDMARTL,
         DMDHHSIZ,DMDHHSZE,SLQ050, ) %>%
  mutate(GENDRFEMALE = as.numeric(RIAGENDR) - 1) %>% 
  select(-RIAGENDR) %>%
  filter(SLQ050 != 9) %>% 
  mutate(SLQ050 = as.numeric(SLQ050) - 1) %>% 
  as.data.frame()

logistic1 = glm(SLQ050 ~ DR1TKCAL + DR1TPROT + DR1TCARB +
                 DR1TTFAT + DR1TFIBE, 
               data = dat, 
               family = "binomial")



logistic2 = glm(SLQ050 ~ DR1TKCAL + DR1TPROT + DR1TCARB +
                 DR1TTFAT + DR1TFIBE + DR1TSUGR + GENDRFEMALE +
                 as.factor(DMDMARTL) + DMDHHSIZ + DMDHHSZE, 
               data = dat, 
               family = "binomial")

summary(logistic1)
summary(logistic2)

logOR.scale<-summary(logistic)$coefficients
OR.scale<-exp(cbind(OR = coef(logistic), confint(logistic)))
cbind(OR.scale,logOR.scale)
plot(logistic, which=1:6)
```

```{r}
logistic2 = glm(SLQ050 ~ DR1TKCAL + DR1TPROT + DR1TCARB +
                 DR1TTFAT + DR1TFIBE + DR1TSUGR + GENDRFEMALE +
                 DMDHHSIZ, 
               data = dat, 
               family = "binomial")

summary(logistic2)

logOR2.scale<-summary(logistic2)$coefficients
OR2.scale<-exp(cbind(OR = coef(logistic2), confint(logistic2)))
cbind(OR2.scale,logOR2.scale)
plot(logistic2, which=1:6)

data.frame(exp(logistic2$coefficients*10))
data.frame(exp(logistic2$coefficients*100))

anova(logistic1,logistic2,test = "Chisq")
```

